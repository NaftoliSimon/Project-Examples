
//Colors (define all used colored variables (see listOfColors.scss for more color options)
$blue: #0d6efd;
$lightBlue: #b6d1fa;
$indigo: #6610f2;

$primary: $blue; //sets bootstrap default primary color //preferably keep this color as a darker color
$lightOrDark: white; //if $primary color is dark, set this variable to a light color (ie white), else set it to a dark color.
// $darkOrLight: black; //this should be the reverse of the 'lightOrDark' variable (see the above line)
@import "node_modules/bootstrap/scss/bootstrap";
@import '../../../Styles/Colors.scss';

.card {
    width: 260px;
    height: 284px;
    background: #07182E;
    position: relative;
    display: flex;
    place-content: center;
    place-items: center;
    overflow: hidden;
    border-radius: 20px;
    text-align: center;
}

.card>* {
    z-index: 1;
    font-size: 2em;
    font-size: 1em;
    padding-left: 1em;
    padding-right: 1em;
}

.card button {
    border-color: var(--border) !important;
}

.card::before {
    content: '';
    position: absolute;
    width: 100px;
    background-image: var(--split-color); //gradient/split color is passed in as a prop in the Card component (see Card2.js)
    height: 130%;
    animation: rotBGimg 5s linear infinite;
    transition: all 0.3s linear;
}

@keyframes rotBGimg {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

.card::after {
    content: '';
    position: absolute;
    background: var(--background);
    ;
    inset: 5px;
    border-radius: 15px;
}

// .card:hover:before {
//     // background-image: linear-gradient(180deg, rgb(81, 255, 0), purple);
//     // background-image: linear-gradient(180deg, black, black);
//     // background-image: linear-gradient(180deg, rgb(0, 183, 255), rgb(255, 48, 255));
//     // animation: rotBGimg 3.5s linear infinite;
// }